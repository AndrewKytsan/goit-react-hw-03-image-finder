{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.scss","components/Button/Button.module.scss","components/Modal/Modal.module.scss","App.module.scss","components/ImageGallery/ImageGallery.module.scss","ApiService/imagesApi.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.scss"],"names":["module","exports","API_KEY","axios","defaults","baseURL","fetchImages","searchQuery","a","page","then","response","data","hits","result","Searchbar","state","inputValue","inputHandler","e","setState","target","value","formHandler","preventDefault","props","onSubmit","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","smallImg","largeImg","onClick","ImageGalleryItemImage","src","alt","proptype","PropTypes","string","isRequired","func","ImageGallery","images","map","image","webformatURL","largeImageURL","id","Button","ButtonWrapper","Modal","closeModal","code","onClose","clickOverlay","nodeName","window","addEventListener","removeEventListener","largeImage","Overlay","App","results","loading","modalImage","firstRequest","searchbarHandler","query","imagesRequest","imagesApi","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","console","log","openModal","prevProps","Loader","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c66b60d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2ymLf\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3jhHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonWrapper\":\"Button_ButtonWrapper__3c2gj\",\"Button\":\"Button_Button__3PHxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__XWmdK\",\"Modal\":\"Modal_Modal__RK8v6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3-G_0\",\"Loader\":\"App_Loader__1310k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1W1e8\"};","import axios from 'axios';\r\nconst API_KEY = '23486768-997b33f9cb0e02e3e0af30e3b';\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nconst fetchImages = async (searchQuery, page = 1) => {\r\n    return await axios(\r\n        `/?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`,\r\n    ).then(response => response.data.hits);\r\n};\r\n\r\nconst result = { fetchImages };\r\n\r\nexport default result;\r\n","import React, { Component } from 'react';\r\nimport s from './Searchbar.module.scss';\r\nimport PropTypes from 'prop-types';\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        inputValue: '',\r\n    };\r\n    inputHandler = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n    formHandler = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.inputValue);\r\n        this.setState({ inputValue: '' });\r\n    };\r\n    render() {\r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm} onSubmit={this.formHandler}>\r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchFormInput}\r\n                        type=\"text\"\r\n                        value={this.state.inputValue}\r\n                        onChange={this.inputHandler}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './ImageGalleryItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ smallImg, largeImg, onClick }) => {\r\n    return (\r\n        <li className={s.ImageGalleryItem}>\r\n            <img\r\n                className={s.ImageGalleryItemImage}\r\n                src={smallImg}\r\n                alt=\"\"\r\n                onClick={() => onClick(largeImg)}\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nImageGalleryItem.proptype = {\r\n    smallImg: PropTypes.string.isRequired,\r\n    largeImg: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport s from './ImageGallery.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n    return (\r\n        <ul className={s.ImageGallery}>\r\n            {images.map(image => (\r\n                <ImageGalleryItem\r\n                    key={image.id}\r\n                    smallImg={image.webformatURL}\r\n                    largeImg={image.largeImageURL}\r\n                    onClick={onClick}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            webformatURL: PropTypes.string.isRequired,\r\n            largeImageURL: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport s from './Button.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <div className={s.ButtonWrapper}>\r\n            <button className={s.Button} type=\"button\" onClick={onClick}>\r\n                Load More\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport s from './Modal.module.scss';\r\nimport PropTypes from 'prop-types';\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.closeModal);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.closeModal);\r\n    }\r\n\r\n    closeModal = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n    clickOverlay = e => {\r\n        if (e.target.nodeName !== 'IMG') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n    render() {\r\n        const { largeImage } = this.props;\r\n        return (\r\n            <div className={s.Overlay} onClick={this.clickOverlay}>\r\n                <div className={s.Modal}>\r\n                    <img src={largeImage} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nModal.propTypes = {\r\n    largeImage: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport imagesApi from './ApiService/imagesApi';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport s from './App.module.scss';\n\nexport default class App extends Component {\n    state = {\n        searchQuery: '',\n        page: 1,\n        results: [],\n        loading: false,\n        modalImage: null,\n        firstRequest: true,\n    };\n    searchbarHandler = query => {\n        this.setState({\n            searchQuery: query,\n            results: [],\n            page: 1,\n            firstRequest: true,\n        });\n    };\n    componentDidUpdate(prevProps, prevState) {\n        const prevQuery = prevState.searchQuery;\n        const nextQuery = this.state.searchQuery;\n\n        prevQuery !== nextQuery && this.imagesRequest();\n    }\n\n    imagesRequest = () => {\n        const { searchQuery, page } = this.state;\n\n        this.setState({\n            loading: true,\n        });\n\n        imagesApi\n            .fetchImages(searchQuery, page)\n            .then(images => {\n                this.setState(prevState => ({\n                    results: [...prevState.results, ...images],\n                    page: prevState.page + 1,\n                    loading: false,\n                    firstRequest: false,\n                }));\n                if (!this.state.firstRequest) {\n                    window.scrollTo({\n                        top: document.documentElement.scrollHeight,\n                        behavior: 'smooth',\n                    });\n                }\n            })\n            .catch(error => console.log(error));\n        // .finally(() => {\n        //     this.setState({\n        //         loading: false,\n        //         firstRequest: false,\n        //     });\n        // });\n    };\n\n    openModal = largeImage => {\n        this.setState({ modalImage: largeImage });\n    };\n\n    closeModal = e => {\n        this.setState({ modalImage: null });\n    };\n\n    render() {\n        const { results, loading, modalImage } = this.state;\n        return (\n            <div className={s.App}>\n                <Searchbar onSubmit={this.searchbarHandler} />\n                <ImageGallery images={results} onClick={this.openModal} />\n                {modalImage && (\n                    <Modal largeImage={modalImage} onClose={this.closeModal} />\n                )}\n                {loading && (\n                    <div className={s.Loader}>\n                        <Loader\n                            type=\"Puff\"\n                            color=\"#00BFFF\"\n                            height={80}\n                            width={80}\n                        />\n                    </div>\n                )}\n                {results.length > 0 && !loading && (\n                    <Button onClick={this.imagesRequest} />\n                )}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__iAoQQ\",\"SearchForm\":\"Searchbar_SearchForm__1sAmD\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2ZL2p\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__sDVLj\",\"SearchFormInput\":\"Searchbar_SearchFormInput__21Snr\"};"],"sourceRoot":""}